# This is a template for signed releases
# To use this:
# 1. Rename this file to signed-release.yml
# 2. Add the required secrets to your repository
# 3. Update the team ID and bundle identifier as needed

name: Signed Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
      
    - name: Import certificates
      env:
        APPLE_CERTIFICATE_DATA: ${{ secrets.APPLE_CERTIFICATE_DATA }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        APPLE_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      run: |
        # Create keychain
        security create-keychain -p "$APPLE_KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$APPLE_KEYCHAIN_PASSWORD" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate
        echo "$APPLE_CERTIFICATE_DATA" | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$APPLE_KEYCHAIN_PASSWORD" build.keychain
        
        # List identities
        security find-identity -v build.keychain
        
    - name: Build and sign app
      env:
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        xcodebuild -project Appresize.xcodeproj \
                   -scheme Appresize \
                   -configuration Release \
                   -derivedDataPath build \
                   -archivePath build/Appresize.xcarchive \
                   CODE_SIGN_IDENTITY="Developer ID Application" \
                   DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
                   CODE_SIGN_STYLE=Manual \
                   archive
                   
        # Export signed app
        xcodebuild -exportArchive \
                   -archivePath build/Appresize.xcarchive \
                   -exportPath build/Export \
                   -exportOptionsPlist ExportOptions.plist
                   
    - name: Notarize app
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      run: |
        # Create ZIP for notarization
        cd build/Export
        zip -r Appresize.zip Appresize.app
        
        # Submit for notarization
        xcrun notarytool submit Appresize.zip \
                              --apple-id "$APPLE_ID" \
                              --password "$APPLE_PASSWORD" \
                              --team-id "$APPLE_TEAM_ID" \
                              --wait
                              
        # Staple the notarization
        xcrun stapler staple Appresize.app
        
    - name: Create signed DMG
      run: |
        # Create staging directory
        mkdir -p dmg-staging
        cp -R "build/Export/Appresize.app" dmg-staging/
        ln -s /Applications dmg-staging/Applications
        
        # Get version
        if [ "${{ github.event_name }}" = "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        
        # Create and sign DMG
        hdiutil create -volname "Appresize $VERSION" \
                       -srcfolder dmg-staging \
                       -ov -format UDZO \
                       "Appresize-$VERSION.dmg"
                       
        # Sign DMG
        codesign --sign "Developer ID Application" \
                 --timestamp \
                 --options runtime \
                 "Appresize-$VERSION.dmg"
                 
        # Verify signature
        codesign --verify --verbose "Appresize-$VERSION.dmg"
        spctl --assess --type install "Appresize-$VERSION.dmg"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: Appresize-*.dmg
        body: |
          ## Signed Release
          
          This release is code-signed and notarized by Apple.
          
          ## Installation
          
          1. Download the DMG file below
          2. Open the DMG and drag Appresize to your Applications folder
          3. Launch Appresize from Applications
          4. Grant accessibility permissions when prompted
          
          ## Requirements
          
          - macOS 10.15 or later
          - Accessibility permissions required
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}